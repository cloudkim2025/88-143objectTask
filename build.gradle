plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.3'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'application'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    // 로컬 lib 폴더에 있는 jar 파일들을 참조하기 위한 flatDir 설정
    flatDir {
        dirs 'lib'
    }
}

dependencies {
    // Spring Boot Web (REST API 개발을 위한 필수 의존성)
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // MySQL JDBC 드라이버
    implementation 'mysql:mysql-connector-java:8.0.29'

    // JPA 설정 (ORM을 사용하려면 필요)
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // Lombok (Getter, Setter 자동 생성)
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Spring Boot Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // lib 폴더에 있는 jar 파일들 의존성 추가 (실제 파일이 없다면 주석 처리)
    /*
    implementation name: 'com.springsource.net.sf.chlib-2.2.0'
    implementation name: 'com.springsource.org.apache.commons.logging-1.1.1'
    implementation name: 'org.springframework.asm-3.0.7.RELEASE'
    implementation name: 'org.springframework.beans-3.0.7.RELEASE'
    implementation name: 'org.springframework.context-3.0.7.RELEASE'
    implementation name: 'org.springframework.core-3.0.7.RELEASE'
    implementation name: 'org.springframework.expression-3.0.7.RELEASE'
    */
}

application {
    mainClass = 'com.example.objecttesk.Main'  // ✅ Main 클래스 지정
}

tasks.named('test') {
    useJUnitPlatform()
}
